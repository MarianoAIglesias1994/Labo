
Test_completo_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000154  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000100  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000154  2**2
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  00000198  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000086  00000000  00000000  000001b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000014  00000000  00000000  0000023e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000024f  00000000  00000000  00000252  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	20 c0       	rjmp	.+64     	; 0x44 <__bad_interrupt>
   4:	1f c0       	rjmp	.+62     	; 0x44 <__bad_interrupt>
   6:	1e c0       	rjmp	.+60     	; 0x44 <__bad_interrupt>
   8:	1d c0       	rjmp	.+58     	; 0x44 <__bad_interrupt>
   a:	1c c0       	rjmp	.+56     	; 0x44 <__bad_interrupt>
   c:	1b c0       	rjmp	.+54     	; 0x44 <__bad_interrupt>
   e:	1a c0       	rjmp	.+52     	; 0x44 <__bad_interrupt>
  10:	19 c0       	rjmp	.+50     	; 0x44 <__bad_interrupt>
  12:	18 c0       	rjmp	.+48     	; 0x44 <__bad_interrupt>
  14:	17 c0       	rjmp	.+46     	; 0x44 <__bad_interrupt>
  16:	16 c0       	rjmp	.+44     	; 0x44 <__bad_interrupt>
  18:	15 c0       	rjmp	.+42     	; 0x44 <__bad_interrupt>
  1a:	14 c0       	rjmp	.+40     	; 0x44 <__bad_interrupt>
  1c:	13 c0       	rjmp	.+38     	; 0x44 <__bad_interrupt>
  1e:	12 c0       	rjmp	.+36     	; 0x44 <__bad_interrupt>
  20:	11 c0       	rjmp	.+34     	; 0x44 <__bad_interrupt>
  22:	10 c0       	rjmp	.+32     	; 0x44 <__bad_interrupt>
  24:	0f c0       	rjmp	.+30     	; 0x44 <__bad_interrupt>
  26:	0e c0       	rjmp	.+28     	; 0x44 <__bad_interrupt>
  28:	0d c0       	rjmp	.+26     	; 0x44 <__bad_interrupt>
  2a:	0c c0       	rjmp	.+24     	; 0x44 <__bad_interrupt>
  2c:	0b c0       	rjmp	.+22     	; 0x44 <__bad_interrupt>
  2e:	0a c0       	rjmp	.+20     	; 0x44 <__bad_interrupt>
  30:	09 c0       	rjmp	.+18     	; 0x44 <__bad_interrupt>
  32:	08 c0       	rjmp	.+16     	; 0x44 <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d4 e0       	ldi	r29, 0x04	; 4
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61
  40:	05 d0       	rcall	.+10     	; 0x4c <main>
  42:	5c c0       	rjmp	.+184    	; 0xfc <_exit>

00000044 <__bad_interrupt>:
  44:	dd cf       	rjmp	.-70     	; 0x0 <__vectors>
/**************************************************************
VECTORES DE INTERRUPCION
***************************************************************/

.org 0x00
rjmp main
  46:	02 c0       	rjmp	.+4      	; 0x4c <main>
.org 0x02
rjmp ISR_INT0_INACTIVITY	
  48:	51 c0       	rjmp	.+162    	; 0xec <ISR_INT0_INACTIVITY>
.org 0x04
rjmp ISR_INT1_BLUETOOTH	
  4a:	54 c0       	rjmp	.+168    	; 0xf4 <ISR_INT1_BLUETOOTH>

0000004c <main>:

main:


; LEDs para las pruebas (Puerto C: Rojos; Puerto D: Verdes)
LDI R20, 0b00001100			; Hay LEDs conectados a los bits seteados en dichos puertos
  4c:	4c e0       	ldi	r20, 0x0C	; 12
OUT _SFR_IO_ADDR(DDRC), R20			
  4e:	47 b9       	out	0x07, r20	; 7
LDI R20, 0b00001100			; Con un 1 quedan apagados por la logica de la placa Club de Robotica
  50:	4c e0       	ldi	r20, 0x0C	; 12
OUT _SFR_IO_ADDR(PORTC), R20	
  52:	48 b9       	out	0x08, r20	; 8

LDI R20, 0b10010000			; Hay LEDs conectados a los bits seteados en dichos puertos
  54:	40 e9       	ldi	r20, 0x90	; 144
OUT _SFR_IO_ADDR(DDRD), R20	
  56:	4a b9       	out	0x0a, r20	; 10
LDI R20, 0b10010000			; Con un 1 quedan apagados por la logica de la placa Club de Robotica
  58:	40 e9       	ldi	r20, 0x90	; 144
OUT _SFR_IO_ADDR(PORTD), R20	
  5a:	4b b9       	out	0x0b, r20	; 11

0000005c <CONFIG_BAJO_CONSUMO>:
***************************************************************/


CONFIG_BAJO_CONSUMO:
	; Config consumo de energia, PSM o PDM
	ldi R16,0b00000100	; Nibble inferior D3D2D1 = 010 es de power down mode y el lsb D0 = 1 es para activar el sleep mode
  5c:	04 e0       	ldi	r16, 0x04	; 4
	out _SFR_IO_ADDR(SMCR),R16
  5e:	03 bf       	out	0x33, r16	; 51

00000060 <CONFIG_INT>:

/**************************************************************
CONFIGURACION INTERRUPCIONES EXTERNAS
***************************************************************/
CONFIG_INT:
	ldi R16,0b00000101	; ldi R16,0b00000001 para INT0; ldi R16,0b00000101 para INT0 e INT1 
  60:	05 e0       	ldi	r16, 0x05	; 5
	sts EICRA, R16		;
  62:	00 93 69 00 	sts	0x0069, r16	; 0x800069 <__EEPROM_REGION_LENGTH__+0x7f0069>

	ldi R16,0b00000011 	; ldi R16,0b00000001 para INT0; ldi R16,0b00000011 para INT0 e INT1 
  66:	03 e0       	ldi	r16, 0x03	; 3
	out EIMSK,R16		;
  68:	0d bf       	out	0x3d, r16	; 61

	ldi R16,0b00000101	; ldi R16,0b00000001 para INT0; ldi R16,0b00000011 para INT0 e INT1 
  6a:	05 e0       	ldi	r16, 0x05	; 5
	out EIFR,R16		;
  6c:	0c bf       	out	0x3c, r16	; 60

SEI
  6e:	78 94       	sei


; LEDs para las pruebas (Puerto C: Rojos; Puerto D: Verdes)
LDI R20, 0b00001100			; Hay LEDs conectados a los bits seteados en dichos puertos
  70:	4c e0       	ldi	r20, 0x0C	; 12
OUT _SFR_IO_ADDR(DDRC), R20			
  72:	47 b9       	out	0x07, r20	; 7
LDI R20, 0b00001100			; Con un 1 quedan apagados por la logica de la placa Club de Robotica
  74:	4c e0       	ldi	r20, 0x0C	; 12
OUT _SFR_IO_ADDR(PORTC), R20	
  76:	48 b9       	out	0x08, r20	; 8

LDI R20, 0b10010000			; Hay LEDs conectados a los bits seteados en dichos puertos
  78:	40 e9       	ldi	r20, 0x90	; 144
OUT _SFR_IO_ADDR(DDRD), R20	
  7a:	4a b9       	out	0x0a, r20	; 10
LDI R20, 0b10010000			; Con un 1 quedan apagados por la logica de la placa Club de Robotica
  7c:	40 e9       	ldi	r20, 0x90	; 144
OUT _SFR_IO_ADDR(PORTD), R20	
  7e:	4b b9       	out	0x0b, r20	; 11

00000080 <SLEEP_MODE>:
			;OUT _SFR_IO_ADDR(PORTC), R20

; Entra en modo sleep, al suceder una interrupcion se despierta en la instruccion siguiente
SLEEP_MODE:
			
			ldi R16,0b00000101	; lsb = 1 para activar el sleep mode
  80:	05 e0       	ldi	r16, 0x05	; 5
			out _SFR_IO_ADDR(SMCR),R16
  82:	03 bf       	out	0x33, r16	; 51
			SLEEP
  84:	88 95       	sleep
			ldi R16,0b00000100	; lsb = 0 para desactivar el sleep mode
  86:	04 e0       	ldi	r16, 0x04	; 4
			out _SFR_IO_ADDR(SMCR),R16
  88:	03 bf       	out	0x33, r16	; 51

			
; En las rutinas de interrupcion se usa R19 para almacenar un registro indicador del tipo de interrupcion ocurrida
; Es una analogia del switch/case del lenguaje C
		
			CPI R19,1
  8a:	31 30       	cpi	r19, 0x01	; 1
			BREQ ALARMA
  8c:	c9 f0       	breq	.+50     	; 0xc0 <ALARMA>

0000008e <RETORNO_ALARMA>:
RETORNO_ALARMA:
			CPI R19,2
  8e:	32 30       	cpi	r19, 0x02	; 2
			BREQ BLUETOOTH
  90:	09 f0       	breq	.+2      	; 0x94 <BLUETOOTH>

00000092 <RETORNO_BLUETOOTH>:
RETORNO_BLUETOOTH:
			RJMP SLEEP_MODE
  92:	f6 cf       	rjmp	.-20     	; 0x80 <SLEEP_MODE>

00000094 <BLUETOOTH>:
/**************************************************************
RUTINA ENVIO DE ENVIO DE DATOS POR BLUETOOTH 
***************************************************************/

BLUETOOTH:	; LED Verde
LDI R21, 10	; Valor de tiempo 
  94:	5a e0       	ldi	r21, 0x0A	; 10

00000096 <PARPADEO2>:

PARPADEO2:
		LDI R20, 0b00000000	; Prende LED
  96:	40 e0       	ldi	r20, 0x00	; 0
		OUT _SFR_IO_ADDR(PORTD), R20	
  98:	4b b9       	out	0x0b, r20	; 11
		RCALL RETARDO2
  9a:	08 d0       	rcall	.+16     	; 0xac <RETARDO2>
		LDI R20, 0b10010000		; Apaga LED
  9c:	40 e9       	ldi	r20, 0x90	; 144
		OUT _SFR_IO_ADDR(PORTD), R20	
  9e:	4b b9       	out	0x0b, r20	; 11
		RCALL RETARDO2
  a0:	05 d0       	rcall	.+10     	; 0xac <RETARDO2>

		DEC R21
  a2:	5a 95       	dec	r21
		CPI R21, 0
  a4:	50 30       	cpi	r21, 0x00	; 0
		BRNE PARPADEO2
  a6:	b9 f7       	brne	.-18     	; 0x96 <PARPADEO2>

		LDI R19,0			; Se limpia el registro indicador
  a8:	30 e0       	ldi	r19, 0x00	; 0
		RJMP RETORNO_BLUETOOTH
  aa:	f3 cf       	rjmp	.-26     	; 0x92 <RETORNO_BLUETOOTH>

000000ac <RETARDO2>:

RETARDO2:
		LDI R16, 10
  ac:	0a e0       	ldi	r16, 0x0A	; 10

000000ae <LOOP12>:
LOOP12:	LDI R17, 255
  ae:	1f ef       	ldi	r17, 0xFF	; 255

000000b0 <LOOP22>:
LOOP22:	LDI R18, 255
  b0:	2f ef       	ldi	r18, 0xFF	; 255

000000b2 <LOOP32>:
LOOP32:  DEC R18
  b2:	2a 95       	dec	r18
		BRNE LOOP32			
  b4:	f1 f7       	brne	.-4      	; 0xb2 <LOOP32>
		DEC R17
  b6:	1a 95       	dec	r17
		BRNE LOOP22
  b8:	d9 f7       	brne	.-10     	; 0xb0 <LOOP22>
		DEC R16
  ba:	0a 95       	dec	r16
		BRNE LOOP12
  bc:	c1 f7       	brne	.-16     	; 0xae <LOOP12>
		RET
  be:	08 95       	ret

000000c0 <ALARMA>:
/**************************************************************
RUTINA DE ALARMA
***************************************************************/

ALARMA:	; LED Rojo
LDI R21, 10	; Valor de tiempo 
  c0:	5a e0       	ldi	r21, 0x0A	; 10

000000c2 <PARPADEO>:

PARPADEO:
		LDI R20, 0b00000000	; Prende LED
  c2:	40 e0       	ldi	r20, 0x00	; 0
		OUT _SFR_IO_ADDR(PORTC), R20	
  c4:	48 b9       	out	0x08, r20	; 8
		RCALL RETARDO
  c6:	08 d0       	rcall	.+16     	; 0xd8 <RETARDO>
		LDI R20, 0b00001100	; Apaga LED
  c8:	4c e0       	ldi	r20, 0x0C	; 12
		OUT _SFR_IO_ADDR(PORTC), R20	
  ca:	48 b9       	out	0x08, r20	; 8
		RCALL RETARDO
  cc:	05 d0       	rcall	.+10     	; 0xd8 <RETARDO>

		DEC R21
  ce:	5a 95       	dec	r21
		CPI R21, 0
  d0:	50 30       	cpi	r21, 0x00	; 0
		BRNE PARPADEO
  d2:	b9 f7       	brne	.-18     	; 0xc2 <PARPADEO>

		LDI R19,0			; Se limpia el registro indicador
  d4:	30 e0       	ldi	r19, 0x00	; 0
		RJMP RETORNO_ALARMA
  d6:	db cf       	rjmp	.-74     	; 0x8e <RETORNO_ALARMA>

000000d8 <RETARDO>:

RETARDO:
		LDI R16, 10
  d8:	0a e0       	ldi	r16, 0x0A	; 10

000000da <LOOP1>:
LOOP1:	LDI R17, 255
  da:	1f ef       	ldi	r17, 0xFF	; 255

000000dc <LOOP2>:
LOOP2:	LDI R18, 255
  dc:	2f ef       	ldi	r18, 0xFF	; 255

000000de <LOOP3>:
LOOP3:  DEC R18
  de:	2a 95       	dec	r18
		BRNE LOOP3			
  e0:	f1 f7       	brne	.-4      	; 0xde <LOOP3>
		DEC R17
  e2:	1a 95       	dec	r17
		BRNE LOOP2
  e4:	d9 f7       	brne	.-10     	; 0xdc <LOOP2>
		DEC R16
  e6:	0a 95       	dec	r16
		BRNE LOOP1
  e8:	c1 f7       	brne	.-16     	; 0xda <LOOP1>
		RET
  ea:	08 95       	ret

000000ec <ISR_INT0_INACTIVITY>:
/**************************************************************
RUTINA DE SERVICIO DE INTERRUPCION POR INACTIVIDAD DEL ACELEROMETRO
***************************************************************/

ISR_INT0_INACTIVITY:
CLI
  ec:	f8 94       	cli
LDI R19,1	
  ee:	31 e0       	ldi	r19, 0x01	; 1
SEI
  f0:	78 94       	sei
RETI
  f2:	18 95       	reti

000000f4 <ISR_INT1_BLUETOOTH>:
/**************************************************************
RUTINA DE SERVICIO DE INTERRUPCION POR ACTIVACION DEL BLUETOOTH
***************************************************************/

ISR_INT1_BLUETOOTH:
CLI
  f4:	f8 94       	cli
LDI R19,2	
  f6:	32 e0       	ldi	r19, 0x02	; 2
SEI
  f8:	78 94       	sei
  fa:	18 95       	reti

000000fc <_exit>:
  fc:	f8 94       	cli

000000fe <__stop_program>:
  fe:	ff cf       	rjmp	.-2      	; 0xfe <__stop_program>
